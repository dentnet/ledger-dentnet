import TransportNodeHid from '@ledgerhq/hw-transport-node-hid'
import { PolkadotApp } from '@zondax/ledger-substrate'

const tests_demo = [
  {
    name: 'DOT_Balances_Force_transfer',
    blob: Buffer.from(
      '050300e2222b004e3dc1e8f1566d54d0ebf6a9d9626ef3bf0eadd88a7ce8cafb7c9c5933a664f3641cd56d78845f345bf4dfb4218f63968a44973387270250a4b2cc3b347dcf08878beb96d72400001800000091b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3a3e9a9c2a5202aea4ddf4300986f0fb23efea7eca868fb3825579927c9abd3d7',
      'hex',
    ),
    metadata: Buffer.from(
      '60000c1c73705f636f72651863727970746f2c4163636f756e7449643332000004000401205b75383b2033325d00000400000320000000080008000005030010000005050018000005070030083c7072696d69746976655f74797065731048323536000004000401205b75383b2033325d0000340000020800880000040000f000000618003d010840706f6c6b61646f745f72756e74696d652c52756e74696d6543616c6c0001042042616c616e63657304009d0101b50173656c663a3a73705f6170695f68696464656e5f696e636c756465735f636f6e7374727563745f72756e74696d653a3a68696464656e5f696e636c7564653a3a64697370617463680a3a3a43616c6c61626c6543616c6c466f723c42616c616e6365732c2052756e74696d653e000500006d01000006100091010c2873705f72756e74696d65306d756c746961646472657373304d756c74694164647265737300010408496404000001244163636f756e744964000000009d010c3c70616c6c65745f62616c616e6365731870616c6c65741043616c6c0001044c7472616e736665725f6b6565705f616c69766508011064657374910101504163636f756e7449644c6f6f6b75704f663c543e00011476616c7565f00128543a3a42616c616e636500030000f10c102873705f72756e74696d651c67656e657269634c756e636865636b65645f65787472696e73696348556e636865636b656445787472696e736963101c416464726573730191011043616c6c013d01245369676e617475726501cd0514457874726101f50c00040034000000f90c10306672616d655f73797374656d28657874656e73696f6e7354636865636b5f6e6f6e5f7a65726f5f73656e64657248436865636b4e6f6e5a65726f53656e64657204045400000000fd0c10306672616d655f73797374656d28657874656e73696f6e7348636865636b5f737065635f76657273696f6e40436865636b5370656356657273696f6e04045400000000010d10306672616d655f73797374656d28657874656e73696f6e7340636865636b5f74785f76657273696f6e38436865636b547856657273696f6e04045400000000050d10306672616d655f73797374656d28657874656e73696f6e7334636865636b5f67656e6573697330436865636b47656e6573697304045400000000090d10306672616d655f73797374656d28657874656e73696f6e733c636865636b5f6d6f7274616c69747938436865636b4d6f7274616c697479040454000004000d0d010c45726100000d0d102873705f72756e74696d651c67656e657269630c6572610c457261000104244d6f7274616c31343304000800008f0000110d10306672616d655f73797374656d28657874656e73696f6e732c636865636b5f6e6f6e636528436865636b4e6f6e6365040454000004006d010120543a3a496e6465780000150d10306672616d655f73797374656d28657874656e73696f6e7330636865636b5f7765696768742c436865636b57656967687404045400000000190d086870616c6c65745f7472616e73616374696f6e5f7061796d656e74604368617267655472616e73616374696f6e5061796d656e7404045400000400f0013042616c616e63654f663c543e00001d0d0c5c706f6c6b61646f745f72756e74696d655f636f6d6d6f6e18636c61696d734850726576616c6964617465417474657374730404540000000060b90a0000ba0a0000bb0a0000bd0a0000bf0a0000c50a0000c60a0000310b0000790b0000d70b00001f0c00002e0c0000380c000067140000691400006a1400006b1400006c1400006d140000fd1400006e1500006f1500007015000071150000fc0fe6d3c1fd8fa93ee070c7d590c4772af16cec6300ff2552597d9f49c4eedfb69ca9e005c6e4d9964360d0b06219d54a88a683ccd6ecb3db927ad8b301e5a89d4ed0742d14dfe4b06959eb1d1a719db7607453d5405623fe0726995f2bae1843898984a445721e9402c95d137bd49d85f553708e1308c95315f894bf29e53738f86ca6a838c8b082025952caff993c1fd0f7e1d0f835a5df8487e7cbc76256ec0b7eb6008bf950aeaabf811bd9eb0bd8e0b571b07fbfb0cde3e930facafe4b8d6ed5e9615cae64f61063436dc0e37b0935ea59a26e237af3640896287a03a3746c4ddf8679c0ab9c46229871abeca334a6a7bf90480b5f27c52734b0aa799f7ec201b76e4a2232b9b32abfe8b86ac8ba944d81da2754a4fc9889c62623a0ea8b4b3573990af66986582568e00c27296f4314ddbfc3d1dda90aeed6590fe4f8957617f4c57ba9babd97cda612def835888fb30c7fcb8530871985810f662f92fac5a23601f6741ce20772dfb8b5651897650cfc9a06d340298f0420cd4f878eb2d8c74bfaff3e0d3b97ad5b197cec9d40b12492f603105b1f7674ba77addc9e5d47a600fa181c9cf89da8a525756074170f6768f75eebf803a1dd3b57488bd9e9f08aa6ba1f65651e5fd7e1054f46ed2cb64c3fbdcc706e874f7c306ae806c4f53e6a65d2f6ae7326e69da63519d7bb7a18384b2f891d7f48543a72b967b25bba017fffc6d59854772339036e9410ac780e0a39473d2d76abccaab3d54cc06eb9687839694dafcc3cabda59611e625ae275b959738c8fe2533be9ced599eb711ace1e69a3bc275c059d5e850bc35fef1624059b0af87b890272253e9f751f01fafa82e923cbdb8d93c629118b7ccee796c2cdb540af2bc759bf9be0478009b9d5bfc986dc8d7e862ce960d0aef7511aa61ee11ce88da9e19303166c687a00d7bb315f6e7ba0ace587f97eeec7649de6f9833e9729d05bbd04f2bc6161e3e31c6f6503feb44d5e94a93ac76d3b4db6fc1ac2816ebe41cede94c594d614f1d68d32236c36bbe06605693f907e33d7cd668da98fe95011d9c34a88fd029a4d4df593d5f9773f109e5991b2051845b75c190b35ade2211895fba7600a71059d3a19cf037994dc56ab857bd4853ab56dc09d3fa0eeb4e495f959538632372f5d10464e9362fec2584d1c2eb404c10df4b9183eaea6b2560883ff6303eeb987e6b1a23e300c56702f55d1f7dd7d33764fcc45fbee8c9ec4d01f453baf22da9735356f8c56b01204195181ad97d3ef540ef56023c87c78e96e4591fe31b73ff253fe012bb436c321c445d3e53ae613e053018a9ce1aef8027121eb325ca78b95dbfe9c729fb6da21c67a4332976551b87d4841401a6637fe9616e38fd9d672fcc49224dd4c0eaff4ee70a30d72c67cbd95ec20ba1cf25afd5f995d53bea49e6c67ede6581972372843760d25bc7efc157bdfedf4ffde185cf4e96a65125295d4f8d03269331f0698eac4c0be2b373a95b5a9a65c4dfd07fe06dfa6095c2e873843b15b3d7576dd74210c95e7bde0103af984c5d70884b06e91f5cfee4fcd7f8aaa8e69c2765a26b75f63f637b8b04bafcd8141c0724cf4e52d5de221ad1f920a1161d870cf84c3d4fa5a05f98b6266e78b324a1986cb4db42cda28e7839a2a034611ac57543dafd5dfdfa864d3a1ac412fc6ee16a19993678a6771842366c794ddecf95a6a4f6effa739ff6102e63404bfe949d7c3c0c165c5c325e943bbe5f780898e359807d6b1f3ccf8b717f9c1d96a1aa64a2045abfed53dec771080e09656ca9bd85f53a496e3cec5dae09967b5ae4d8f21b4f1c4ea87e748637edda920d982d21f8c6aacf5bed3e51fd01de683c3075ae024e3a9ca5629e2928bebef90ccc2ab32f858f36864757b160408e1face91eb5d6a214db3362b9d571b5f2baaa542d7a5f7015ae056ede5aefbfb3e4fcea17206a4db609f72ce152adb50296430e6251d567cb03817770774b76f4650b4030bad7798db3575feefa59f7446b78c32afc92249494ae7794ab1c3e19d7adf5cc0da3220a26f029ef2e8d7b328c59e720bee948c03b849791a942b34aa6e353a35b503fc658f832636dde1bbf397507847422d4488c4e2abb64558091c9f3a652aba82d1d864f1171a8a775ce733f5baebbb43e36ecd1e752579dbfe9e397ab12639719c9b408fa2e291b93e74ff4399c23cb5826e18429886e7965bec8cfaa518c6ca59437ee594b455aa8d876b6f1eab3dc99807b01a2a905000e5bd0c45f71cff35bc2a6495bced7de919fe8cc97c279f6144a044dc779683ea6edc1656b88acb8924e95be09a43afa1b47a8b532f7d45f48a4fc790f15af34c62f75bf20b18cea7650aaa6bd1048973d37dbf2a44dfd429b6973fd0f2c7d757d1446e6078ebd9af2997cf5e766397103263c65dc0e314a0161580666d0ccee9538991e8817ea800fea4a3ea4ce7e3930f448ab6ddae17cc62adb1bee9591b11a37f9de35a500bc28f6770be13fc785295687891e1d14cb781e86236c10a8c63d17966ed57dc185c95c6b2dab32fa5b49dfa77cd9eeb339ae8c37f697143feaa2a677bddc97b841e316718a25d52df3788f902ef4ce7f1ce97b37355d5eb1fa9e1e55cbb8e86212153ae92b84a8390d39a62144721dfc158b15f67c3f28c0f1dacb9437c9297b14605b445341fecc2189b9973814cf9c8419a6bb0129f8ec79d97642ebb7b6adc5570f7a7023f8a27d683a4377b5f76ef5e6a87d2b09d8cc89e9172a038da0773b4485f319b5cbb768161e8b16b8e90874a54fe577d2646a06d9d26a00410e0a949bd93890b7a0156cf3bcbb6602e3bcd00f10c042448436865636b4e6f6e5a65726f53656e646572f90c8840436865636b5370656356657273696f6efd0c1038436865636b547856657273696f6e010d1030436865636b47656e65736973050d3038436865636b4d6f7274616c697479090d3028436865636b4e6f6e6365110d882c436865636b576569676874150d88604368617267655472616e73616374696f6e5061796d656e74190d884850726576616c6964617465417474657374731d0d88103934333120706f6c6b61646f7400000a0c444f54',
      'hex',
    ),
  },
]

async function main() {
  const transport = await TransportNodeHid.default.open()
  const app = new PolkadotApp(transport)

  const PATH = "m/44'/354'/0'/0'/0'"
  const DOT_SS58_PREFIX = 0

  const responseAddr = await app.getAddress(PATH, DOT_SS58_PREFIX)

  console.log(responseAddr)

  for (const test of tests_demo) {
    const signatureRequest = await app.sign(PATH, test.blob, test.metadata)
    console.log(signatureRequest)
  }
}

;(async () => {
  await main()
})()
